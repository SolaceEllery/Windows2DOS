<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox_Windows2DOSLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>